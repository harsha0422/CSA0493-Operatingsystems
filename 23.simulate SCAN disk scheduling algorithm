#include <stdio.h>
#include <stdlib.h>

void sortRequests(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
            	
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

void scanDisk(int requestQueue[], int head, int size, char direction) {
    int totalSeekOperations = 0;
    int currentPosition = head;
    int index = 0;
    
    sortRequests(requestQueue, size);

    while (index < size && requestQueue[index] < head) {
        index++;
    }

    printf("SCAN Disk Scheduling Sequence: %d ", head);
    
    if (direction == 'left') {
        for (int i = index; i >= 0; i--) {
            printf("%d ", requestQueue[i]);
            totalSeekOperations += abs(currentPosition - requestQueue[i]);
            currentPosition = requestQueue[i];
        }

        for (int i = index + 1; i < size; i++) {
            printf("%d ", requestQueue[i]);
            totalSeekOperations += abs(currentPosition - requestQueue[i]);
            currentPosition = requestQueue[i];
        }
    } else if (direction == 'right') {
        for (int i = index; i < size; i++) {
            printf("%d ", requestQueue[i]);
            totalSeekOperations += abs(currentPosition - requestQueue[i]);
            currentPosition = requestQueue[i];
        }

        for (int i = index - 1; i >= 0; i--) {
            printf("%d ", requestQueue[i]);
            totalSeekOperations += abs(currentPosition - requestQueue[i]);
            currentPosition = requestQueue[i];
        }
    }

    printf("\nTotal Seek Operations: %d\n", totalSeekOperations);
}

int main() {
    int size, head, direction;

    printf("Enter the size of the request queue: ");
    scanf("%d", &size);

    int requestQueue[size];

    printf("Enter the request queue elements:\n");
    for (int i = 0; i < size; i++) {
        scanf("%d", &requestQueue[i]);
    }

    printf("Enter the initial position of the disk head: ");
    scanf("%d", &head);

    printf("Enter the direction (1 for left, 2 for right): ");
    scanf("%d", &direction);

    if (direction == 1) {
        scanDisk(requestQueue, head, size, 'left');
    } else if (direction == 2) {
        scanDisk(requestQueue, head, size, 'right');
    } else {
        printf("Invalid direction input.\n");
    }

    return 0;
}
